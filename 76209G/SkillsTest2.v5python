{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nmotor_FL = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nmotor_BL = Motor(Ports.PORT11, GearSetting.RATIO_18_1, False)\nmotor_FR = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\nmotor_BR = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nvexcode_controller_1_precision = 0\nmyVariable = 0\n\ndef when_started1():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    controller_1.screen.set_cursor(1, 1)\n    controller_1.screen.print(\"Regular\")\n    controller_1.screen.next_row()\n\ndef ondriver_drivercontrol_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    controller_1.screen.set_cursor(1, 1)\n    controller_1.screen.print(\"Driver    \")\n    controller_1.screen.next_row()\n    M = ((  1,  1, -1),\n         ( -1,  1,  1),\n         ( -1,  1, -1),\n         (  1,  1,  1))\n    D = (0, 0, 0)\n    S = (0, 0, 0, 0)\n    while True:\n        D[0] = controller_1.axis3.position() / 10.0 # forward/back\n        D[1] = controller_1.axis4.position() / 10.0 # left/right\n        D[2] = controller_1.axis1.position() / 10.0 # jaw\n        S = M * D\n        motor_FL.spin(FORWARD, S[0], VOLT)\n        motor_BL.spin(FORWARD, S[1], VOLT)\n        motor_FR.spin(FORWARD, S[2], VOLT)\n        motor_BR.spin(FORWARD, S[3], VOLT)\n        controller_1.screen.set_cursor(2, 1)\n        controller_1.screen.print(D[0], D[1], D[2], \"      \")\n        controller_1.screen.next_row()\n        controller_1.screen.print(S[0], S[1], S[2], S[3], \"       \")\n        wait(5, MSEC)\n\ndef onauton_autonomous_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    brain.screen.set_cursor(1, 1)\n    controller_1.screen.print(\"Autonomous\")\n    controller_1.screen.next_row()\n    motor_FL.spin_for(FORWARD, 180, DEGREES, wait=False)\n    motor_FR.spin_for(REVERSE, 180, DEGREES, wait=False)\n\n# create a function for handling the starting and stopping of all autonomous tasks\ndef vexcode_auton_function():\n    # Start the autonomous control tasks\n    auton_task_0 = Thread( onauton_autonomous_0 )\n    # wait for the driver control period to end\n    while( competition.is_autonomous() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the autonomous control tasks\n    auton_task_0.stop()\n\ndef vexcode_driver_function():\n    # Start the driver control tasks\n    driver_control_task_0 = Thread( ondriver_drivercontrol_0 )\n\n    # wait for the driver control period to end\n    while( competition.is_driver_control() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the driver control tasks\n    driver_control_task_0.stop()\n\n\n# register the competition functions\ncompetition = Competition( vexcode_driver_function, vexcode_auton_function )\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"motor_FL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[11],"name":"motor_BL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[10],"name":"motor_FR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[20],"name":"motor_BR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}