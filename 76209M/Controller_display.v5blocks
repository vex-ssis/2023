{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"#dAyqRoOWT2:F0RUkn_i\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">counter</variable><variable type=\"\" id=\".qv:0Oom,*R#Dh3b_zqI\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">column</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_print\" id=\"F(EZ3V5m~NNW~J~.K?;o\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"T?V}-NP.Bg4+Gh_,hH9t\"><field name=\"TEXT\">Ready to start 76209M!</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"LEEukf6;X|5~CkHx9`lz\"><field name=\"TARGET\">Controller1</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"o#x?fU,:z]TsQa_-`cUm\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"cZO-|W9%FrUdZ01o[3*q\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"8~XhR[]K9UEIwoT9yCGG\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"=Nox]o|#yS!J{*VOc$H#\"><field name=\"TEXT\">This is 76209M</field></shadow></value><next><block type=\"v5_looks_print\" id=\"so)Db$)al$(}5J@dUHn.\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"fFGQ_s/cFzG6u)Y#^^${\"><field name=\"TEXT\">AKA The Masters</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"ZbyrM!H~qLDY+Vj`F.Yg\"><field name=\"MOTOR\">Shooter</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"(5wV+.A99{6$Ryp.R4Jo\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"z}U)aG@VfMd,%111lV$;\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"{/o{PO@:;7,F2=+bW{fu\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"gA$v#3ESwUN^.E]ydTAs\"><field name=\"MOTOR\">Rollerwheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"%,vQ??.n{`ye1D*6E5!X\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_control_wait\" id=\"`empMEVs(GFRThmzBm`t\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"s#]L6M7WL@e2WJbgb.b)\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"IsZy`a2yGk~Y}o@!sifx\"><field name=\"VARIABLE\" id=\"#dAyqRoOWT2:F0RUkn_i\" variabletype=\"\">counter</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"?`]y0ZB[[6Hxi4*Z.{B!\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_control_repeat\" id=\"H@@@yO4I@_X+C6i*yx5v\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"q[|O;3Sto~mM-J}30DKb\"><field name=\"NUM\">30</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_set_cursor\" id=\"1p}NKRSX-gc]gE?BWFU$\"><field name=\"TARGET\">Controller1</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"e}vGnI!NZPz+)#=gQd]9\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\".!Di@TZ$Ng75B9==1*N:\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"]N!{uIO9~}|o$}eKaZHa\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"5[|8|kby84]yjiz#~|9`\"><field name=\"TEXT\">Location is at </field></shadow></value><next><block type=\"v5_looks_print\" id=\":Punby3vtu1PyqvLo%mx\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"b!R-uLaW=g2f+L;^).vD\"><field name=\"TEXT\">Timer is now at</field></shadow><block type=\"v5_variables_variable\" id=\"gN3bTl=8qyqiCfpF1O@n\"><field name=\"VARIABLE\" id=\".qv:0Oom,*R#Dh3b_zqI\" variabletype=\"\">column</field></block></value><next><block type=\"v5_looks_set_cursor\" id=\"K]NM~p0A+Tk@qP!}=X+D\"><field name=\"TARGET\">Controller1</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"3m-.R@^y.K/-PpC)%BvM\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"~a^*e=1]`z;JZ|0?nz@j\"><field name=\"NUM\">1</field></shadow><block type=\"v5_variables_variable\" id=\"8K_Xyd/)}0@e_0{6zH$$\"><field name=\"VARIABLE\" id=\".qv:0Oom,*R#Dh3b_zqI\" variabletype=\"\">column</field></block></value><next><block type=\"v5_looks_print\" id=\"D]5k$GVXKGB?pvB^5!pr\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"M5anXXCxX{EurE{|]y6)\"><field name=\"TEXT\">This is 76209M</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"fB#lCPrK]n0IWq9ecASz\"><field name=\"TARGET\">Controller1</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"-PGPS$FYwU]xiwj_@XNU\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"#Y8{[yT%%c+SkE0|hg4!\"><field name=\"NUM\">1</field></shadow><block type=\"v5_variables_variable\" id=\"e)MF53LGU_a0s~kCZTuS\"><field name=\"VARIABLE\" id=\".qv:0Oom,*R#Dh3b_zqI\" variabletype=\"\">column</field></block></value><next><block type=\"v5_looks_print\" id=\"~+Fe=%=(BwVM+!sN52(;\"><field name=\"TARGET\">Controller1</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"hD2WfX-iCHIJ!Ld}^uc(\"><field name=\"TEXT\">I have no idea</field></shadow></value><next><block type=\"v5_control_wait\" id=\"`lx1c%da.T9plu9Vzt8B\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"TN;ug#L@mR(9h^bl#-*J\"><field name=\"NUM\">0.5</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"S),1am@Y#yC6.agP@]}U\"><field name=\"VARIABLE\" id=\".qv:0Oom,*R#Dh3b_zqI\" variabletype=\"\">column</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"WIBE~J^[/R;)(At$3w__\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_add\" id=\"gN31.CgbFnkTxzlFc8zb\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"O.aiVKI#J0?W66xT53,Q\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"_Xfx.FMqu}cJ^@C];nzY\"><field name=\"VARIABLE\" id=\".qv:0Oom,*R#Dh3b_zqI\" variabletype=\"\">column</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"jia|vqRc=Q#^63kmr`@{\"><field name=\"NUM\">1</field></shadow></value></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[10,20,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"370","unit":"mm","wheelbase":"345","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Intake","leftDir":"false","right":"Shooter","rightDir":"false","upDown":"","upDownDir":"false","xB":"Rollerwheel","xBDir":"false","drive":"arcadel","id":"primary"}},{"port":[11],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[12],"name":"Rollerwheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"}},{"port":[15,19],"name":"Shooter","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"true"}}],"slot":6,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT10, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT20, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 370, 345, mm, 1);\n\ncontroller Controller1 = controller(primary);\nmotor Intake = motor(PORT11, ratio18_1, false);\n\nmotor Rollerwheel = motor(PORT12, ratio36_1, false);\n\nmotor ShooterMotorA = motor(PORT15, ratio6_1, false);\nmotor ShooterMotorB = motor(PORT19, ratio6_1, true);\nmotor_group Shooter = motor_group(ShooterMotorA, ShooterMotorB);\n\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool Controller1LeftShoulderControlMotorsStopped = true;\nbool Controller1RightShoulderControlMotorsStopped = true;\nbool Controller1XBButtonsControlMotorsStopped = true;\nbool DrivetrainNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis4\n      // right = Axis3 - Axis4\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis4.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis4.position();\n      \n      // check if the values are inside of the deadband range\n      if (abs(drivetrainLeftSideSpeed) < 5 && abs(drivetrainRightSideSpeed) < 5) {\n        // check if the motors have already been stopped\n        if (DrivetrainNeedsToBeStopped_Controller1) {\n          // stop the drive motors\n          LeftDriveSmart.stop();\n          RightDriveSmart.stop();\n          // tell the code that the motors have been stopped\n          DrivetrainNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the motors next time the input is in the deadband range\n        DrivetrainNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonL1/ButtonL2 status to control Intake\n      if (Controller1.ButtonL1.pressing()) {\n        Intake.spin(forward);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonL2.pressing()) {\n        Intake.spin(reverse);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (!Controller1LeftShoulderControlMotorsStopped) {\n        Intake.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1LeftShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonR1/ButtonR2 status to control Shooter\n      if (Controller1.ButtonR1.pressing()) {\n        Shooter.spin(forward);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonR2.pressing()) {\n        Shooter.spin(reverse);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (!Controller1RightShoulderControlMotorsStopped) {\n        Shooter.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1RightShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonX/ButtonB status to control Rollerwheel\n      if (Controller1.ButtonX.pressing()) {\n        Rollerwheel.spin(forward);\n        Controller1XBButtonsControlMotorsStopped = false;\n      } else if (Controller1.ButtonB.pressing()) {\n        Rollerwheel.spin(reverse);\n        Controller1XBButtonsControlMotorsStopped = false;\n      } else if (!Controller1XBButtonsControlMotorsStopped) {\n        Rollerwheel.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1XBButtonsControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, counter, column;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToController1_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Controller1_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"Ready to start 76209M!\");\n  Controller1.Screen.setCursor(1, 1);\n  Controller1.Screen.print(\"This is 76209M\");\n  Controller1.Screen.newLine();\n  Controller1.Screen.print(\"AKA The Masters\");\n  Controller1.Screen.newLine();\n  Shooter.setVelocity(100.0, percent);\n  Intake.setVelocity(100.0, percent);\n  Rollerwheel.setVelocity(100.0, percent);\n  wait(1.0, seconds);\n  counter = 0.0;\n  repeat(30) {\n    Controller1.Screen.setCursor(3, 1);\n    Controller1.Screen.print(\"Location is at \");\n    Controller1.Screen.print(printToController1_numberFormat(), static_cast<float>(column));\n    Controller1.Screen.setCursor(1, column);\n    Controller1.Screen.print(\"This is 76209M\");\n    Controller1.Screen.setCursor(2, column);\n    Controller1.Screen.print(\"I have no idea\");\n    wait(0.5, seconds);\n    column = column + 1.0;\n    wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}