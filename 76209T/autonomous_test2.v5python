{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\nmyVariable = 0\n\ndef when_started1():\n    global myVariable\n    drivetrain.drive_for(FORWARD, 400, MM, wait=True)\n    drivetrain.turn_for(RIGHT, 45, DEGREES, wait=True)\n    drivetrain.stop()\n\ndef onauton_autonomous_0():\n    global myVariable\n    drivetrain.set_drive_velocity(50, PERCENT)\n    drivetrain.drive_for(FORWARD, 200, MM, wait=True)\n\ndef ondriver_drivercontrol_0():\n    global myVariable\n    drivetrain.drive_for(REVERSE, 200, MM, wait=True)\n\n# create a function for handling the starting and stopping of all autonomous tasks\ndef vexcode_auton_function():\n    # Start the autonomous control tasks\n    auton_task_0 = Thread( onauton_autonomous_0 )\n    # wait for the driver control period to end\n    while( competition.is_autonomous() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the autonomous control tasks\n    auton_task_0.stop()\n\ndef vexcode_driver_function():\n    # Start the driver control tasks\n    driver_control_task_0 = Thread( ondriver_drivercontrol_0 )\n\n    # wait for the driver control period to end\n    while( competition.is_driver_control() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the driver control tasks\n    driver_control_task_0.stop()\n\n\n# register the competition functions\ncompetition = Competition( vexcode_driver_function, vexcode_auton_function )\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[1,2,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}